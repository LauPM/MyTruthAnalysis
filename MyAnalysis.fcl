BEGIN_PROLOG

my_analysis : #Your chosen name for this parameter set 
{
  module_type  :      "MyAnalysis" #Links the fhicl file to the analysis module using the name you gave your analyzer class
  TreesToWrite: [["Truth"], ["DetSim"]]

  #Input for the module: ["MODULE LABEL", "INSTANCE NAME", "PRODUCT TYPE", "OUTPUT TREE NAME"]
  
  ### DUNE FD 1x2x6 mysingles ###
  # ProductsToDump: [
  #                   ["largeant",      "",           "simb::MCParticle",         "G4_MCtruth"],  # Gen:    Montecarlo truth info from Generator Stage (particle PDG, original positions... etc)
  #                   ["IonAndScint",   "",           "sim::SimEnergyDeposit",    "EDep"]         # Edep:   Energy deposited in the detector
  #                   # ["tpcrawdecoder", "daq",        "raw::RawDigit",            "RawDetSim"]    # DetSim: 
  #                   # ["tpcrawdecoder", "simpleSC",   "sim::SimChannel",          "SimDetSim"]    # DetSim: 
  #                 ]
  
  ### ProtoDUNE-SP  mysingles ###
  # ProductsToDump: [
  #                   ["largeant",   "",                                                "simb::MCParticle",         "G4_MCtruth"],  # Gen:    Montecarlo truth info from Generator Stage (particle PDG, original positions... etc)
  #                   ["largeant",   "LArG4DetectorServicevolTPCActiveInner",           "sim::SimEnergyDeposit",    "EDep"]         # Edep:   Energy deposited in the detector
                    # ["tpcrawdecoder", "daq",        "raw::RawDigit",            "RawDetSim"]    # DetSim: 
                    # ["tpcrawdecoder", "simpleSC",   "sim::SimChannel",          "SimDetSim"]    # DetSim: 
                  # ]


  ### ProtoDUNE-SP  singlepion ###
    ProductsToDump: [
                    ["largeant",      "",           "simb::MCParticle",         "G4_MCtruth"],  # Gen:    Montecarlo truth info from Generator Stage (particle PDG, original positions... etc)
                    ["IonAndScint",   "priorSCE",   "sim::SimEnergyDeposit",    "EDep"]         # Edep:   Energy deposited in the detector
                    # ["tpcrawdecoder", "daq",        "raw::RawDigit",            "RawDetSim"]    # DetSim: 
                    # ["tpcrawdecoder", "simpleSC",   "sim::SimChannel",          "SimDetSim"]    # DetSim: 
                  ]

  RollUpUnsavedIDs:	  "true" 
}

END_PROLOG